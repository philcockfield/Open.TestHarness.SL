<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>ViewModelContainerExtensions - MVCContrib Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../MvcContrib.FluentHtml/index.htm" class="current">MvcContrib.FluentHtml</a>
      </li><li>
          <a href="../MvcContrib.FluentHtml.Behaviors/index.htm">MvcContrib.FluentHtml.Behaviors</a>
      </li><li>
          <a href="../MvcContrib.FluentHtml.Elements/index.htm">MvcContrib.FluentHtml.Elements</a>
      </li><li>
          <a href="../MvcContrib.FluentHtml.Expressions/index.htm">MvcContrib.FluentHtml.Expressions</a>
      </li><li>
          <a href="../MvcContrib.FluentHtml.Html/index.htm">MvcContrib.FluentHtml.Html</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in MvcContrib.FluentHtml</h2>
	<div class="scroll">
		<ul><li>
            <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/ModelStateDictionaryExtensions.htm">ModelStateDictionaryExtensions</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/ModelViewMasterPage`1.htm">ModelViewMasterPage&lt;T&gt;</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/ModelViewPage`1.htm">ModelViewPage&lt;T&gt;</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/ModelViewUserControl`1.htm">ModelViewUserControl&lt;T&gt;</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/PartialNameConventionService.htm">PartialNameConventionService</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/PartialRenderer`2.htm">PartialRenderer&lt;T, TPartialViewModel&gt;</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/StringExtensions.htm">StringExtensions</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/ViewDataContainerExtensions.htm">ViewDataContainerExtensions</a>
        </li><li>
            <a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm" class="current">ViewModelContainerExtensions</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> ViewModelContainerExtensions</p>
		<p><strong>Namespace</strong> MvcContrib.FluentHtml</p>
	</div>
    <div class="sub-header">
			<div id="summary">Extensions of IViewModelContainer<T>
			</div>


			<h3 class="section">Methods</h3>
			<ul><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#CheckBox``1">CheckBox&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#CheckBoxList``1">CheckBoxList&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#FormLiteral``1">FormLiteral&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#Hidden``1">Hidden&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#IdFor``1">IdFor&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#Index``1">Index&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#Index``1">Index&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#Label``1">Label&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#Literal``1">Literal&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#MultiSelect``1">MultiSelect&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#NameFor``1">NameFor&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#Password``1">Password&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#RadioButton``1">RadioButton&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#RadioSet``1">RadioSet&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#RenderPartial``2">RenderPartial&lt;T, TPartialViewModel&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#RenderPartial``2">RenderPartial&lt;T, TPartialViewModel&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#RenderPartial``2">RenderPartial&lt;T, TPartialViewModel&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#RenderTypedPartial``2">RenderTypedPartial&lt;T, TPartialViewModel&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#Select``1">Select&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#SubmitButton``1">SubmitButton&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#TextArea``1">TextArea&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#TextBox``1">TextBox&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#TypeStamp``1">TypeStamp&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#ValidationMessage``1">ValidationMessage&lt;T&gt;</a></li><li><a href="../MvcContrib.FluentHtml/ViewModelContainerExtensions.htm#ValidationMessage``1">ValidationMessage&lt;T&gt;</a></li>
			</ul>


	</div>



	<h3 class="section">Public static methods</h3>
<div id="CheckBox``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/CheckBox.htm">CheckBox</a> <strong>CheckBox&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML input element of type 'checkbox' and set its value from the ViewModel based on the expression provided.
The checkbox element has an accompanying input element of type 'hidden' to support binding upon form post.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="CheckBoxList``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/CheckBoxList.htm">CheckBoxList</a> <strong>CheckBoxList&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate a list of HTML input elements of type 'checkbox' and set its value from the ViewModel based on the expression provided.
Each checkbox element has an accompanying input element of type 'hidden' to support binding upon form post.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="FormLiteral``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/FormLiteral.htm">FormLiteral</a> <strong>FormLiteral&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML span element and hidden input element.  Set the inner text of the span element and the value
of the hidden input element from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="Hidden``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/Hidden.htm">Hidden</a> <strong>Hidden&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML input element of type 'hidden' and set its value from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="IdFor``1" class="method">
		<h4><span title="System.string">string</span> <strong>IdFor&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Returns a name to match the value for the HTML id attribute form elements using the same expression.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member.</p>
      </div>


		</div>
	</div><div id="Index``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/Hidden.htm">Hidden</a> <strong>Index&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> valueExpression)</h4>
		<div class="content">Generate an HTML input element of type 'hidden,' set it's name from the expression with '.Index' appended
and set its value from the ViewModel from the valueExpression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member to use to derive the 'name' attribute.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> valueExpression</h6><p class="comments">Expression indicating the ViewModel member to use to get the value of the element.</p>
      </div>


		</div>
	</div><div id="Index``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/Index.htm">Index</a> <strong>Index&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML input element of type 'hidden,' set it's name from the expression with '.Index' appended.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member to use to derive the 'name' attribute.</p>
      </div>


		</div>
	</div><div id="Label``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/Label.htm">Label</a> <strong>Label&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML label element, point its "for" attribute to the input element from the provided expression, and set its inner text from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member that has an input element associated with it.</p>
      </div>


		</div>
	</div><div id="Literal``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/Literal.htm">Literal</a> <strong>Literal&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML span element and set its inner text from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="MultiSelect``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/MultiSelect`1.htm">MultiSelect&lt;TModel&gt;</a> <strong>MultiSelect&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML select element and set the selected options from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="NameFor``1" class="method">
		<h4><span title="System.string">string</span> <strong>NameFor&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Returns a name to match the value for the HTML name attribute form elements using the same expression.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member.</p>
      </div>


		</div>
	</div><div id="Password``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/Password.htm">Password</a> <strong>Password&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML input element of type 'password' and set its value from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="RadioButton``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/RadioButton.htm">RadioButton</a> <strong>RadioButton&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML input element of type 'radio'.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="RadioSet``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/RadioSet.htm">RadioSet</a> <strong>RadioSet&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate a set of HTML input elements of type 'radio' -- each wrapped inside a label.  The whole thing is wrapped in an HTML
div element.  The values of the input elements and he label text are taken from the options specified.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="RenderPartial``2" class="method">
		<h4><span title="System.void">void</span> <strong>RenderPartial&lt;T, TPartialViewModel&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.string">string</span> partialViewName, <span title="System.Linq.Expressions.Expression<Func<T, TPartialViewModel>>">Expression&lt;Func&lt;T, TPartialViewModel&gt;&gt;</span> modelExpression)</h4>
		<div class="content">Renders a partial

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.string">string</span></code> partialViewName</h6><p class="comments">The name of the partial to render.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, TPartialViewModel>>">Expression&lt;Func&lt;T, TPartialViewModel&gt;&gt;</span></code> modelExpression</h6><p class="comments">Expression of the model for the partial.</p>
      </div>


		</div>
	</div><div id="RenderPartial``2" class="method">
		<h4><span title="System.void">void</span> <strong>RenderPartial&lt;T, TPartialViewModel&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.string">string</span> partialViewName, <span title="System.Linq.Expressions.Expression<Func<T, TPartialViewModel>>">Expression&lt;Func&lt;T, TPartialViewModel&gt;&gt;</span> modelExpression, <span title="System.Web.Mvc.ViewDataDictionary">ViewDataDictionary</span> viewData)</h4>
		<div class="content">Renders a partial

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.string">string</span></code> partialViewName</h6><p class="comments">The name of the partial to render.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, TPartialViewModel>>">Expression&lt;Func&lt;T, TPartialViewModel&gt;&gt;</span></code> modelExpression</h6><p class="comments">Expression of the model for the partial.</p>
          <h6><code><span title="System.Web.Mvc.ViewDataDictionary">ViewDataDictionary</span></code> viewData</h6><p class="comments">View data for the partial. (If the view data has a Model, it will be replaced by the model as specified in the expression parameter, if it is not null.)</p>
      </div>


		</div>
	</div><div id="RenderPartial``2" class="method">
		<h4><span title="System.void">void</span> <strong>RenderPartial&lt;T, TPartialViewModel&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.string">string</span> partialViewName, <span title="System.Linq.Expressions.Expression<Func<T, TPartialViewModel>>">Expression&lt;Func&lt;T, TPartialViewModel&gt;&gt;</span> modelExpression, <span title="System.Func`2[]">Func`2[]</span> viewDataItems)</h4>
		<div class="content">




		</div>
	</div><div id="RenderTypedPartial``2" class="method">
		<h4><span title="System.void">void</span> <strong>RenderTypedPartial&lt;T, TPartialViewModel&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, TPartialViewModel>>">Expression&lt;Func&lt;T, TPartialViewModel&gt;&gt;</span> modelExpression)</h4>
		<div class="content">




		</div>
	</div><div id="Select``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/Select`1.htm">Select&lt;TModel&gt;</a> <strong>Select&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML select element and set the selected option value from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="SubmitButton``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/SubmitButton.htm">SubmitButton</a> <strong>SubmitButton&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.string">string</span> text)</h4>
		<div class="content">Generate an HTML input element of type 'submit.'

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.string">string</span></code> text</h6><p class="comments">Value of the 'value' and 'name' attributes.  Also used to derive the 'id' attribute.</p>
      </div>


		</div>
	</div><div id="TextArea``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/TextArea.htm">TextArea</a> <strong>TextArea&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML textarea element and set its value from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="TextBox``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/TextBox.htm">TextBox</a> <strong>TextBox&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">Generate an HTML input element of type 'text' and set its value from the ViewModel based on the expression provided.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div><div id="TypeStamp``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/TypeStamp.htm">TypeStamp</a> <strong>TypeStamp&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view)</h4>
		<div class="content">Generate a hidden field that contains a type stamp of the model

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">extended view</p>
      </div>
<div class="return">
        <h5>Return</h5>
        <h6><code><a href="../MvcContrib.FluentHtml.Elements/TypeStamp.htm">TypeStamp</a></code></h6>
        <p>Hidden text field containing type information</p>
      </div>

		</div>
	</div><div id="ValidationMessage``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/ValidationMessage.htm">ValidationMessage</a> <strong>ValidationMessage&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression, <span title="System.string">string</span> message)</h4>
		<div class="content">If ModelState contains an error for the specified view model member, generate an HTML span element with the
specified message as inner text, or with the ModelState error message if the specified message is null.  If no
class is specified the class attribute of the span element will be 'field-validation-error'.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
          <h6><code><span title="System.string">string</span></code> message</h6><p class="comments">The error message.</p>
      </div>


		</div>
	</div><div id="ValidationMessage``1" class="method">
		<h4><a href="../MvcContrib.FluentHtml.Elements/ValidationMessage.htm">ValidationMessage</a> <strong>ValidationMessage&lt;T&gt;</strong>(this <a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a> view, <span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span> expression)</h4>
		<div class="content">If ModelState contains an error for the specified view model member, generate an HTML span element with the
ModelState error message is the specified message is null.   If no class is specified the class attribute
of the span element will be 'field-validation-error'.

<div class="parameters">
        <h5>Parameters</h5>

          <h6><code><a href="../MvcContrib.FluentHtml/IViewModelContainer`1.htm">IViewModelContainer&lt;T&gt;</a></code> view</h6><p class="comments">The view.</p>
          <h6><code><span title="System.Linq.Expressions.Expression<Func<T, object>>">Expression&lt;Func&lt;T, object&gt;&gt;</span></code> expression</h6><p class="comments">Expression indicating the ViewModel member associated with the element.</p>
      </div>


		</div>
	</div>

<div id="footer">
  <p>Based on v2.0.36.0 of MvcContrib.FluentHtml (MVCContrib)</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>